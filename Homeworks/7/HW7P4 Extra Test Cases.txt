#Extra Test Cases - 

#Complete Trees
#25
test1 = Graph([[0, 10, 20],[10, 0, 15],[20, 15, 0]])
print(test1.Prim())
#20
test2 = Graph([[0, 10, 20, 5],[10, 0, 15, 7],[20, 15, 0, 8],[5,7,8,0]])
print(test2.Prim())
#12083
test3 = Graph([[0, 8440, 9763, 8316, 6225], [8440, 0, 1625, 6272, 9191], [9763, 1625, 0, 8893, 2046], [8316, 6272, 8893, 0, 2187], [6225, 9191, 2046, 2187, 0]])
print(test3.Prim())
#11
test4 = Graph([[0, 3, 2, 6, 3], [3, 0, 7, 8, 8], [2, 7, 0, 3, 5], [6, 8, 3, 0, 9], [3, 8, 5, 9, 0]])
print(test4.Prim())
#25 Nodes
#1209
test5= Graph([[0, 554, 855, 393, 583, 536, 154, 176, 470, 37, 50, 450, 353, 46, 919, 389, 848, 301, 863, 886, 894, 345, 353, 518, 589], [554, 0, 192, 886, 470, 815, 141, 898, 797, 492, 211, 212, 74, 993, 535, 901, 857, 184, 678, 20, 798, 790, 731, 940, 946], [855, 192, 0, 765, 175, 449, 555, 734, 944, 466, 792, 940, 561, 310, 954, 73, 755, 540, 67, 26, 922, 265, 534, 687, 893], [393, 886, 765, 0, 491, 487, 969, 19, 853, 107, 173, 9, 104, 476, 724, 372, 865, 28, 16, 103, 386, 868, 318, 661, 650], [583, 470, 175, 491, 0, 231, 128, 565, 68, 82, 420, 168, 528, 332, 758, 187, 37, 716, 719, 859, 942, 640, 222, 66, 158], [536, 815, 449, 487, 231, 0, 822, 756, 380, 959, 304, 90, 514, 540, 184, 676, 455, 773, 173, 606, 742, 301, 750, 423, 71], [154, 141, 555, 969, 128, 822, 0, 457, 727, 680, 26, 990, 812, 84, 412, 654, 706, 897, 479, 256, 989, 530, 604, 476, 687], [176, 898, 734, 19, 565, 756, 457, 0, 773, 205, 901, 607, 256, 359, 519, 675, 315, 535, 457, 564, 768, 598, 507, 831, 111], [470, 797, 944, 853, 68, 380, 727, 773, 0, 641, 268, 217, 367, 785, 327, 669, 98, 914, 723, 136, 362, 814, 95, 84, 459], [37, 492, 466, 107, 82, 959, 680, 205, 641, 0, 281, 205, 992, 231, 687, 542, 395, 147, 593, 553, 159, 127, 589, 324, 670], [50, 211, 792, 173, 420, 304, 26, 901, 268, 281, 0, 313, 568, 404, 503, 269, 764, 334, 496, 816, 643, 463, 593, 448, 756], [450, 212, 940, 9, 168, 90, 990, 607, 217, 205, 313, 0, 916, 733, 880, 112, 160, 378, 712, 723, 218, 894, 599, 457, 896], [353, 74, 561, 104, 528, 514, 812, 256, 367, 992, 568, 916, 0, 156, 784, 924, 509, 559, 948, 393, 348, 171, 598, 776, 47], [46, 993, 310, 476, 332, 540, 84, 359, 785, 231, 404, 733, 156, 0, 40, 457, 644, 583, 102, 504, 663, 360, 450, 286, 552], [919, 535, 954, 724, 758, 184, 412, 519, 327, 687, 503, 880, 784, 40, 0, 191, 167, 485, 354, 700, 939, 992, 470, 381, 901], [389, 901, 73, 372, 187, 676, 654, 675, 669, 542, 269, 112, 924, 457, 191, 0, 600, 825, 782, 398, 486, 915, 144, 756, 441], [848, 857, 755, 865, 37, 455, 706, 315, 98, 395, 764, 160, 509, 644, 167, 600, 0, 983, 271, 22, 252, 458, 376, 152, 535], [301, 184, 540, 28, 716, 773, 897, 535, 914, 147, 334, 378, 559, 583, 485, 825, 983, 0, 192, 34, 963, 695, 871, 957, 303], [863, 678, 67, 16, 719, 173, 479, 457, 723, 593, 496, 712, 948, 102, 354, 782, 271, 192, 0, 646, 523, 515, 593, 704, 247], [886, 20, 26, 103, 859, 606, 256, 564, 136, 553, 816, 723, 393, 504, 700, 398, 22, 34, 646, 0, 749, 64, 205, 181, 842], [894, 798, 922, 386, 942, 742, 989, 768, 362, 159, 643, 218, 348, 663, 939, 486, 252, 963, 523, 749, 0, 376, 621, 637, 179], [345, 790, 265, 868, 640, 301, 530, 598, 814, 127, 463, 894, 171, 360, 992, 915, 458, 695, 515, 64, 376, 0, 881, 775, 855], [353, 731, 534, 318, 222, 750, 604, 507, 95, 589, 593, 599, 598, 450, 470, 144, 376, 871, 593, 205, 621, 881, 0, 778, 225], [518, 940, 687, 661, 66, 423, 476, 831, 84, 324, 448, 457, 776, 286, 381, 756, 152, 957, 704, 181, 637, 775, 778, 0, 277], [589, 946, 893, 650, 158, 71, 687, 111, 459, 670, 756, 896, 47, 552, 901, 441, 535, 303, 247, 842, 179, 855, 225, 277, 0]])
print(test5.Prim())

#Non-Complete Tree
#10
test10 = Graph([[0, 2, 1, 0, 0, 0],[2, 0, 0, 5, 0, 0],[1, 0, 0, 0, 6, 1],[0, 5, 0, 0, 1, 7],[0, 0, 6, 1, 0, 0],[0, 0, 1, 7, 0, 0]])
print(test10.Prim())
#57
test11 = Graph([[0, 6, 10, 0, 0, 0, 0, 0, 0, 0],[6, 0, 12, 11, 14, 0, 0, 0, 0, 0],[10, 12, 0, 12, 0, 0, 8, 16, 0, 0],[0, 11, 12, 0, 0, 6, 3, 0, 0, 0],[0, 14, 0, 0, 0, 4, 0, 0, 6, 0],[0, 0, 0, 6, 4, 0, 0, 0, 12, 0],[0, 0, 8, 3, 0, 0, 0, 0, 16, 6],[0, 0, 16, 0, 0, 0, 0, 0, 0, 8],[0, 0, 0, 0, 6, 12, 16, 0, 0, 13],[0, 0, 0, 0, 0, 0, 6, 8, 13, 0]])
print(test11.Prim())